# Generated by Django 3.2.6 on 2021-08-15 19:21

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_title', models.CharField(max_length=200)),
                ('offer_text_short', models.CharField(max_length=64)),
                ('offer_text_long', models.CharField(blank=True, max_length=1000)),
                ('image_url', models.ImageField(upload_to='Offers')),
                ('price', models.FloatField(default=0)),
                ('date_start', models.DateField(default=datetime.datetime(2021, 8, 15, 19, 21, 8, 340659, tzinfo=utc))),
                ('date_end', models.DateField(default=datetime.datetime(2021, 8, 22, 19, 21, 8, 340659, tzinfo=utc))),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_total', models.FloatField(default=0)),
                ('date', models.DateTimeField(default=datetime.datetime(2021, 8, 15, 19, 21, 8, 338044, tzinfo=utc))),
                ('order_status', models.CharField(choices=[('NOT PLACED', 'NOT PLACED'), ('PLACED', 'PLACED'), ('PENDING', 'PENDING'), ('COMPLETE', 'COMPLETE'), ('MANUAL CHECKOUT', 'MANUAL CHECKOUT'), ('AWAITING PAYMENT', 'AWAITING PAYMENT'), ('CANCELLED', 'CANCELLED')], default='NOT PLACED', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.CharField(max_length=20)),
                ('group_id', models.CharField(blank=True, max_length=10)),
                ('website', models.URLField(blank=True)),
                ('logo_url', models.ImageField(upload_to='Store')),
                ('online_rp', models.BooleanField(default=False)),
                ('rp_euro_ratio', models.FloatField(default=0.01)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_no', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('store_selection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StoreUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('CUST', 'CUSTOMER'), ('CLRK', 'CLERK'), ('MCHT', 'MERCHANT'), ('ADMN', 'ADMIN')], default='CUST', max_length=4)),
                ('online_uid', models.CharField(blank=True, max_length=50)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StoreOnlineRp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_name', models.CharField(max_length=100)),
                ('database_url', models.CharField(max_length=200)),
                ('database_type', models.CharField(default='MySQL', max_length=50)),
                ('ecommerce_site_type', models.CharField(max_length=50)),
                ('user_table_name', models.CharField(max_length=50)),
                ('user_id_column_name', models.CharField(max_length=50)),
                ('rp_table_name', models.CharField(blank=True, max_length=50)),
                ('rp_column_name', models.CharField(blank=True, max_length=50)),
                ('store', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
            ],
        ),
        migrations.CreateModel(
            name='RewardPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points_earned', models.FloatField(blank=True, default=0)),
                ('total_points_spent', models.FloatField(blank=True, default=0)),
                ('total_points_given', models.FloatField(blank=True, default=0)),
                ('current_balance', models.FloatField(blank=True, default=0)),
                ('update_successful', models.BooleanField(default=True)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50)),
                ('product_title', models.CharField(max_length=200)),
                ('price', models.FloatField(default=0)),
                ('ean_barcode', models.CharField(blank=True, max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('online_pid', models.CharField(blank=True, max_length=50)),
                ('store_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('offer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.offers')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.order')),
                ('product_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.product')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='offers',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Loyalty_X00152022.store'),
        ),
        migrations.AddField(
            model_name='offers',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='HistoricalUserDetails',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('contact_no', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store_selection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStore',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('store_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.CharField(max_length=20)),
                ('group_id', models.CharField(blank=True, max_length=10)),
                ('website', models.URLField(blank=True)),
                ('logo_url', models.TextField(max_length=100)),
                ('online_rp', models.BooleanField(default=False)),
                ('rp_euro_ratio', models.FloatField(default=0.01)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical store',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRewardPoints',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('total_points_earned', models.FloatField(blank=True, default=0)),
                ('total_points_spent', models.FloatField(blank=True, default=0)),
                ('total_points_given', models.FloatField(blank=True, default=0)),
                ('current_balance', models.FloatField(blank=True, default=0)),
                ('update_successful', models.BooleanField(default=True)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical reward points',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProduct',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50)),
                ('product_title', models.CharField(max_length=200)),
                ('price', models.FloatField(default=0)),
                ('ean_barcode', models.CharField(blank=True, max_length=50)),
                ('manufacturer', models.CharField(max_length=50)),
                ('online_pid', models.CharField(blank=True, max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store_id', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Loyalty_X00152022.store')),
            ],
            options={
                'verbose_name': 'historical product',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order_total', models.FloatField(default=0)),
                ('date', models.DateTimeField(default=datetime.datetime(2021, 8, 15, 19, 21, 8, 338044, tzinfo=utc))),
                ('order_status', models.CharField(choices=[('NOT PLACED', 'NOT PLACED'), ('PLACED', 'PLACED'), ('PENDING', 'PENDING'), ('COMPLETE', 'COMPLETE'), ('MANUAL CHECKOUT', 'MANUAL CHECKOUT'), ('AWAITING PAYMENT', 'AWAITING PAYMENT'), ('CANCELLED', 'CANCELLED')], default='NOT PLACED', max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOffers',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('offer_title', models.CharField(max_length=200)),
                ('offer_text_short', models.CharField(max_length=64)),
                ('offer_text_long', models.CharField(blank=True, max_length=1000)),
                ('image_url', models.TextField(max_length=100)),
                ('price', models.FloatField(default=0)),
                ('date_start', models.DateField(default=datetime.datetime(2021, 8, 15, 19, 21, 8, 340659, tzinfo=utc))),
                ('date_end', models.DateField(default=datetime.datetime(2021, 8, 22, 19, 21, 8, 340659, tzinfo=utc))),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='Loyalty_X00152022.store')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical offers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
